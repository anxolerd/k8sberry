---
- name: Check if token exists
  delegate_to: "{{ groups['masters'] | first }}"
  run_once: true
  changed_when: false
  shell: kubeadm token list | tail -n 1 | awk '{print $1}'
  register: existing_token

- name: Generate new token
  delegate_to: "{{ groups['masters'] | first }}"
  run_once: true
  command: kubeadm token create --ttl 1h
  register: new_token
  when: existing_token.stdout == 'TOKEN'

- name: Set token fact
  set_fact:
    kubeadm_join_token: "{{ existing_token.stdout if existing_token.stdout != 'TOKEN' else new_token.stdout }}"

- name: Calculate ca certificate hash
  shell: >
    openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt
    | openssl rsa -pubin -outform der 2>/dev/null
    | openssl dgst -sha256 -hex
    | sed 's/^.* //'
  register: calc_kubeadm_ca_hash
  delegate_to: "{{ groups['masters'] | first }}"
  changed_when: false
  run_once: true

- name: Set ca certificate hash fact
  set_fact:
    kubeadm_ca_hash: "{{ calc_kubeadm_ca_hash.stdout }}"
